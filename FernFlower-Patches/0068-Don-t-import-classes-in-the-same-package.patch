From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: moist-mason <67809772+moist-mason@users.noreply.github.com>
Date: Sun, 12 Mar 2023 12:56:47 -0500
Subject: [PATCH] Don't import classes in the same package


diff --git a/src/org/jetbrains/java/decompiler/main/collectors/ImportCollector.java b/src/org/jetbrains/java/decompiler/main/collectors/ImportCollector.java
index 05dc8357a24fc7b4862619e07ecd9edd2f3f4369..01110f11758fdbacca83111141fbf21d56bce46b 100644
--- a/src/org/jetbrains/java/decompiler/main/collectors/ImportCollector.java
+++ b/src/org/jetbrains/java/decompiler/main/collectors/ImportCollector.java
@@ -23,6 +23,7 @@ import org.jetbrains.java.decompiler.struct.StructContext;
 
 import java.util.*;
 import java.util.Map.Entry;
+import java.util.stream.Collectors;
 
 
 public class ImportCollector {
@@ -130,28 +131,17 @@ public class ImportCollector {
   }
 
   private List<String> packImports() {
-    List<Entry<String, String>> lst = new ArrayList<Entry<String, String>>(mapSimpleNames.entrySet());
-
-    Collections.sort(lst, new Comparator<Entry<String, String>>() {
-      public int compare(Entry<String, String> par0, Entry<String, String> par1) {
-        int res = par0.getValue().compareTo(par1.getValue());
-        if (res == 0) {
-          res = par0.getKey().compareTo(par1.getKey());
-        }
-        return res;
-      }
-    });
-
-    List<String> res = new ArrayList<String>();
-    for (Entry<String, String> ent : lst) {
-      // exclude a current class or one of the nested ones, java.lang and empty packages
-      if (!setNotImportedNames.contains(ent.getKey()) &&
-          !JAVA_LANG_PACKAGE.equals(ent.getValue()) &&
-          !ent.getValue().isEmpty()) {
-        res.add(ent.getValue() + "." + ent.getKey());
-      }
-    }
-
-    return res;
+    return mapSimpleNames.entrySet().stream()
+            .filter(ent ->
+                    // exclude the current class or one of the nested ones
+                    // empty, java.lang and the current packages
+                    !setNotImportedNames.contains(ent.getKey()) &&
+                    !ent.getValue().contains(ent.getKey()) &&
+                    !JAVA_LANG_PACKAGE.equals(ent.getValue()) &&
+                    !ent.getValue().equals(currentPackagePoint)
+            )
+            .sorted(Map.Entry.<String, String>comparingByValue().thenComparing(Map.Entry.comparingByKey()))
+            .map(ent -> ent.getValue() + "." + ent.getKey())
+            .collect(Collectors.toList());
   }
 }
